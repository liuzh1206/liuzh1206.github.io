<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>凝聚态拓扑</title>
      <link href="//2023/12/17/%E5%87%9D%E8%81%9A%E6%80%81%E6%8B%93%E6%89%91/"/>
      <url>//2023/12/17/%E5%87%9D%E8%81%9A%E6%80%81%E6%8B%93%E6%89%91/</url>
      
        <content type="html"><![CDATA[<h2 id="陈数">陈数</h2><blockquote><p>为了方便理解，用物理中最常见的磁场来类比说明</p></blockquote><p>在实空间中每个点可以定义一个矢量空间，这样就定义了无数了线性空间。称这个实空间为底空间，而矢量空间对应的就是在实空间上长出的纤维。在每个矢量空间中取一个矢量，这样每个点对应一个矢量就得到了一个矢量场，称为纤维丛的截面</p><p>以电磁场为例，设有一矢势场$\mathrm A_\mathit \mu$，它的场强也就是曲率被定义为$$\mathrm{F_{\mathit{\mu\nu}} = \partial_\mathit \mu A_\mathit \nu - \partial_\mathit \nu A_\mathit \mu}$$</p><p>在凝聚态中，我们也可定义一个类似的场量称为相位场，这里考虑二维情形，取布洛赫基矢$\ket{\mathrm{u_\mathit \lambda}}$可定义为$$\mathrm{A_\mathit i  = \braket{u_\lambda |\partial_\mathit iu_\lambda}}$$于是沿某路线相位的变化为$$\mathrm{\theta = \int A_\mathit idk^\mathit i}$$由于在$\mathrm k$空间相位是连续变化而且具有周期性，因此在第一布里渊区内的波函数应满足周期条件，即波函数的相位在起点和对应的终点连成的线上变化为$\mathrm 0$或$\mathrm{2n\pi}$</p><p>$$\mathrm{\oint A_\mathit i dk^\mathit i = \iint_{FBZ} \Omega_{\mathit{i j}}dk^\mathit i \wedge dk^\mathit j = 2n\pi}$$</p><p>相位是空间内的连续变化场，由斯托克斯定理可知</p><p>$$\mathrm{\Omega_{\mathit{ij}} = \partial_\mathit i A_\mathit j - \partial_\mathit j A_\mathit i = \braket{\partial_\mathit i u_\lambda| \partial_\mathit j u_\lambda}}$$</p><p>可将其定义为场强，当场强在第一布里渊区内积分为零里则认为场平庸，面当场强的积分不为零里说明相位在第一布里渊区内有绕圈，具有同一绕圈数的场可通过连续变换相互转化，属于同伦类。在拓扑上等价，于是可以通过绕圈数$\mathrm n$区分不同的拓扑等价类，这个不变量就是我们所知的陈数。类比电磁场就可以说在第一布里渊区内出现$\mathrm n$单位的磁单极子</p><h2 id="mathrm-Z-2-拓扑数">$\mathrm{Z_2}$拓扑数</h2><p>上面的叙述省略了出现$\mathrm 2\pi$相位差的原因，其物理来源是波函数的时间反演对称性的破坏。但是对称性破坏在材料中要求必须有磁性，这很大程序上限制了拓扑材料的发展，自然界中磁性材料占比并不是很多。</p><p>还有一种体系，在整体上具有时间反演对称性，其中包含两个没有相互作用的相互间有时间反演对称的态，它们的陈数是互为反号而加和为零。这两个态由自旋不同的一对电子组成，这对电子每个都有不为零的拓扑数称为自旋陈数，可以用它来标识不同的拓扑等价类。数学上可以证明，自旋轨道耦合使得这些等价类中奇数和偶数分别是等价的，于是可以用$\mathrm 1$和$\mathrm 0$来区分这些等价类，这就是$\mathrm Z_2$拓扑数</p><h2 id="磁性材料的拓扑">磁性材料的拓扑</h2><p>上面的推导都是针对$\mathrm k$空间的态矢相位的，而在磁性材料中也有拓扑相的出现通过自旋方向场来定义。用自旋在实空间中的分布来定义相似的场，然后通过求导定义。设原子格点中磁矢量场为$\mathbf{m}$可定义类似的拓扑数</p><p>$$\mathrm{Q = \frac{1}{4\pi}\int \mathbf m \cdot \left( \partial_x \mathbf m \times \partial_y\mathbf m  \right) dxdy}$$</p><p>在传统理解中材料只有顺磁和逆磁两种属性，海森堡模型给出相邻两磁矢的的相互作用哈密顿量</p><p>$$\mathrm{\hat H = A_{ex}\mathbf S_\mathit i \cdot \mathbf S_\mathit j}$$</p><p>但在之后对材料的研究中发现，由于自旋轨道耦合作用的出现使哈密顿量中出现新的项</p><p>$$\mathrm{\hat H_{DMI} = D_{\mathit{ij} } \cdot (\mathbf S_\mathit i \times \mathbf S_\mathit j)}$$</p><p>这项的出现使自旋方向有相互垂直的趋势，和海森堡模型结合最终会使材料的自旋方向出现一定角度。连续的角度变化会出现最终会让自旋方向偏转，形成磁畴壁。不同的常数会使它们趋于形成不同各类的磁畴壁并让它们有不同的曲率。这样就出现了不同大小种类的斯格明子。它和共线的磁矢场无法通过连续形变转化，因此在温和条件下无法相互转化，这就是所谓拓扑保护，通过它们的同伦类可以区别不同的类型，也就是拓扑不变量。</p>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 凝聚态 </tag>
            
            <tag> 基础理论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对易关系</title>
      <link href="//2023/12/08/%E5%AF%B9%E6%98%93%E5%85%B3%E7%B3%BB/"/>
      <url>//2023/12/08/%E5%AF%B9%E6%98%93%E5%85%B3%E7%B3%BB/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章主要是对基础公式的一个回顾和对比并加入了一点小想法，文中出现的公式都是所有理论力学和量子力学书上都有的最基础的公式，就不加参考文献了。</p></blockquote><h2 id="经典力学回顾">经典力学回顾</h2><p>在经典力学中，有拉格朗日量</p><p>$$\mathrm{ L(q_\mathit i, \dot q_\mathit i) = T - V}\$$定义作用量为$$\mathrm{ S = \int L(q_\mathit i, \dot q_\mathit i, t) dt}$$通过变分$\delta \mathrm S = 0$可以得到拉格朗日方程$$\mathrm{\frac{\partial L}{\partial q_\mathit i} -\frac{d}{dt}\frac{\partial L}{\partial \dot q_\mathit i}} = 0$$微分拉格朗日量得$$\mathrm{dL =\frac{\partial L}{\partial t} +\sum_\mathit i\left(\frac{\partial L}{\partial q_\mathit i}dq_\mathit i +\frac{\partial L}{\partial \dot q_\mathit i}d\dot q_\mathit i\right)}$$定义动量$\mathrm{p_\mathit i = \frac{\partial L}{\partial \dot q_\mathit i}}$并代入拉格朗日方程后微分将变成$$\mathrm{dL =\frac{\partial L}{\partial t} +\sum_\mathit i\left(\dot p_\mathit idq_\mathit i +p_\mathit id\dot q_\mathit i\right)}$$并进行由勒让德变换得到哈密顿量$$\mathrm{ H = \sum_\mathit ip_\mathit i\dot q_\mathit i - L = T + V}$$现对其进行微分并代入$\mathrm{dL}$得到$$\mathrm{dH }= \mathrm{ \sum_\mathit i\left(\dot q_\mathit id p_\mathit i + p_\mathit id \dot q_\mathit i \right) - dL}\= \mathrm{ \sum_\mathit i\left(\dot q_\mathit id p_\mathit i - \dot p_\mathit id q_\mathit i\right) -\frac{\partial L}{\partial t}}$$由此得$$\mathrm{ \dot q_\mathit i} =\mathrm{\frac{\partial H}{\partial p_\mathit i}}\\mathrm{ \dot p_\mathit i } =\mathrm{ -\frac{\partial H}{\partial q_\mathit i}}\\mathrm{ \frac{\partial H}{\partial t}} =\mathrm{ -\frac{\partial L}{\partial t}}$$这就是正则方程，设现在有一力学量为$\mathrm{F(q_\mathit i, p_\mathit i)}$，则其对时间的全微分为$$\mathrm{ \frac{dF(q_\mathit i, p_\mathit i)}{dt} =\frac{\partial F(q_\mathit i, p_\mathit i)}{\partial t} +\sum_\mathit i\left(\frac{\partial F(q_\mathit i, p_\mathit i)}{\partial q_\mathit i}\dot q_\mathit i +\frac{\partial F(q_\mathit i, p_\mathit i)}{\partial p_\mathit i}\dot p_\mathit i\right)}$$现在将其中的$\mathrm{\dot q_\mathit i,\dot p_\mathit i }$用正则方程代换得$$\mathrm{\frac{\partial F}{\partial t} =\frac{\partial F}{\partial t} +\sum_\mathit i\left(\frac{\partial F}{\partial p_\mathit i}\frac{\partial H}{\partial q_\mathit i} -\frac{\partial F}{\partial q_\mathit i}\frac{\partial H}{\partial p_\mathit i}\right)}$$于是可以定义泊松括号$$\mathrm{\{A,B\} = \sum_\mathit i\left(\frac{\partial A}{\partial p_\mathit i}\frac{\partial B}{\partial q_\mathit i} -\frac{\partial A}{\partial q_\mathit i}\frac{\partial B}{\partial p_\mathit i}\right)}$$现在可以得到结论，在经典力学中不显含时的力学量$\mathrm  F$守恒的条件为$$\mathrm{\frac{\partial F}{\partial t} = \{H, F\} = 0}$$到此，通过拉格朗日方程得到了经典力学中的对易关系</p><h2 id="量子力学中的对易关系">量子力学中的对易关系</h2><p>从波动力学的薛定谔方程开始推导，薛定谔方程为$$\mathrm{i\hbar\frac{\partial }{\partial t}\Psi(\mathbf r,t) = \hat H\Psi(\mathbf r,t)}$$现考虑力学量算符$\mathrm{\hat A}$平均值为$$\mathrm{\bar A = \int\Psi^*\hat A\Psi d\mathbf r}$$</p><p>对其进行时间求导并将薛定谔方程代入可得</p><p>$$\mathrm{\dot{\bar A} = \frac{d\bar A}{dt} } =\mathrm{\int \left(\frac{\partial \Psi^*}{\partial t}\hat A\Psi+\Psi^*\frac{\partial \hat A}{\partial t}\Psi-\Psi^*\hat A\frac{\partial \Psi}{\partial t}\right)d\mathbf r} =\mathrm{\int\left(\Psi^*\frac{\partial \hat A}{\partial t}\Psi+\frac{\mathit i}{\hbar}(\hat H^* \Psi^*) \hat A\Psi-\frac{\mathit i}{\hbar}\Psi^*\hat A \hat H \Psi\right) d\mathbf r}$$</p><p>由H的厄米性可得$$\mathrm{\dot{\bar A} = \int \left(\Psi^*\left(\frac{\partial \hat A}{\partial t} +\frac{\mathit i}{\hbar}\hat H \hat A -\frac{\mathit i}{\hbar}\hat A \hat H\right)\Psi\right)d\mathbf r}$$</p><p>于是可以定义对易关系$\mathrm{[A,B] = AB - BA}$，得到算符对时间的导数为$$\mathrm{\dot{\hat A} = \frac{\partial \hat A}{\partial t} + \frac{\mathit i}{\hbar}[\hat H, \hat A]}$$</p><p>在坐标表象中坐标与动量算符的对易关系可以很容易得到$$\mathrm{[\mathbf{\hat x}, \mathbf{\hat p}] = \mathit{i}\hbar}$$如果我们将$\mathbf{\hat x}$对时间的求导用与$\mathrm{\hat H}$对易并代换$\mathbf{\hat p = \mathrm m\dot{\hat x}}$也可以得到上述对易关系</p><h2 id="对比">对比</h2><p>将上面的推导做个总结</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">经典力学</th><th style="text-align:center">量子力学</th></tr></thead><tbody><tr><td style="text-align:center">正则方程</td><td style="text-align:center">$\mathrm {\dot q_\mathit i = \frac{\partial H}{\partial q_\mathit i }\dot ; \dot p_\mathit i = -\frac{\partial H}{\partial\dot p_\mathit i}}$</td><td style="text-align:center">$\mathrm{[\hat x,\hat p] = \mathit i\hbar}$</td></tr><tr><td style="text-align:center">对易关系</td><td style="text-align:center">$\mathrm{\{A,B\} = \sum_\mathit i \left( \frac{\partial A}{\partial p_\mathit i}\frac{\partial B}{\partial q_\mathit i} - \frac{\partial A}{\partial q_\mathit i}\frac{\partial B}{\partial p_\mathit i} \right)}$</td><td style="text-align:center">$\mathrm{[A, B] = AB - BA}$</td></tr><tr><td style="text-align:center">时间导数</td><td style="text-align:center">$\mathrm{ \dot A = \{H, A\}  }$</td><td style="text-align:center">$\mathrm{\dot{\hat A} = [\hat H, \hat A]}$</td></tr></tbody></table><p>现在回头再来看经典和量子给出的正则关系实际意味着什么。经典力学中从拉格朗日方程出发，用函数求导的链式法则与正则方程得到了物理量对时间的导数并由此定义了一种运算。通过这种运算可以得到各种物理量的时间演化。</p><p>而在量子力学中通过对可测量的物理量平均求导并结合薛定谔方程得到了与经典相似的一种定义。数学上这叫李括号，而这种运算被实际上定义了一种李代数，即算符运算本质是一种李群和李代数的运算。</p><p>在场的量子化中找到对易关系就意味着对场完成了量子化，从数学角度上说就是找到物理量对应的李代数。而在不同表象下的态实际就是找到这个群的一种表示的表示空间。即态是一种流形，由它上的坐标变换得到的群对应的李代数也就是各种物理量满足对易关系。对易关系给出的是流形底空间的一种内禀性质，它给出了态应该去什么样的流形上找，而相互作用则给出了这个流形的形状。</p><p>再看经典力学，我们从拉格朗日方程出发得到定义在$\mathrm q_\mathit i \mathrm{p_\mathit i}$为底空间的相空间上的一种流形，正则方程给出了相空间的内禀性质，这样的流形在数学上就是辛流形，而势给出了流形的形状，对应于量子中的相互作用。</p>]]></content>
      
      
      <categories>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础理论 </tag>
            
            <tag> 理论物理 </tag>
            
            <tag> 量子力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>wannier90</title>
      <link href="//2023/05/20/wannier90/"/>
      <url>//2023/05/20/wannier90/</url>
      
        <content type="html"><![CDATA[<p>新版本<code>wannier90</code>和<code>wanniertools</code>由于分组问题导致版本不匹配时<code>wannier90_hr.dat</code>的变换脚本，适用于<code>wannier90</code>的<code>v3.1.0</code>和<code>wanniertools</code>的<code>v2.6.1</code>转换脚本，详情见<a href="https://mp.weixin.qq.com/s?__biz=MzI3MzIyMjI2Nw==&amp;mid=2247488669&amp;idx=1&amp;sn=206f5c56cd24d560bce6c13a4179a256&amp;chksm=eb27cb89dc50429fafda89240cea0106ea62f91528322db84a6db1160fcd1dc6d0a67a4d3044&amp;scene=21#wechat_redirect">这里</a>和<a href="https://mp.weixin.qq.com/s?__biz=MzI3MzIyMjI2Nw==&amp;mid=2247488713&amp;idx=1&amp;sn=dd3f2ff6d5b493f77f13c2fc705658b4&amp;chksm=eb27cbdddc5042cba64f727a19f5c1a68ca2b26af13e85ef5d13b08bc505eb7f1ec259b422d0&amp;scene=126&amp;sessionid=1689000080#rd">这里</a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">creat_trans_matrix</span>(<span class="params">dim</span>):</span><br><span class="line">    base = <span class="built_in">int</span>(dim/<span class="number">2</span>)</span><br><span class="line">    <span class="comment"># dim = base*2</span></span><br><span class="line"></span><br><span class="line">    Us = np.zeros([dim, dim])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(base):</span><br><span class="line">        Us[<span class="number">2</span>*i, i] = <span class="number">1</span></span><br><span class="line">        Us[<span class="number">2</span>*i+<span class="number">1</span>, base+i] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    Us = np.matrix(Us)</span><br><span class="line">    <span class="keyword">return</span> Us</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">load_wannier_hr</span>(<span class="params">path_to_hr_file</span>):</span><br><span class="line"></span><br><span class="line">    file_path = os.path.join(</span><br><span class="line">        path_to_hr_file,</span><br><span class="line">        <span class="string">&quot;wannier90_hr.dat&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(file_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        origin_data = f.readlines()</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    num_wann = <span class="built_in">int</span>(origin_data[<span class="number">1</span>])</span><br><span class="line">    nrpts = <span class="built_in">int</span>(origin_data[<span class="number">2</span>])</span><br><span class="line">    n = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> nrpts % <span class="number">15</span>:</span><br><span class="line">        n = <span class="built_in">int</span>(nrpts/<span class="number">15</span> + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    head = origin_data[:n+<span class="number">3</span>]</span><br><span class="line">    data = origin_data[n+<span class="number">3</span>:]</span><br><span class="line">    <span class="keyword">return</span> num_wann, nrpts, head, data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_indices_map</span>(<span class="params">dim</span>):</span><br><span class="line">    indices_ori = np.array([i+<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(dim)])</span><br><span class="line">    Us = creat_trans_matrix(dim)</span><br><span class="line">    indices = np.array(indices_ori * Us.T, dtype=<span class="built_in">int</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">dict</span>(<span class="built_in">zip</span>(indices_ori, indices))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    num_wann, nrpts, head, data = load_wannier_hr(<span class="string">&#x27;./&#x27;</span>)</span><br><span class="line">    indices_map = create_indices_map(num_wann)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;new_wannier90_hr.dat.dat&#x27;</span>, <span class="string">&#x27;w+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> head:</span><br><span class="line">            f.write(i)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">            line = i.split()</span><br><span class="line">            line[<span class="number">3</span>] = indices_map[<span class="built_in">int</span>(line[<span class="number">3</span>])]</span><br><span class="line">            line[<span class="number">4</span>] = indices_map[<span class="built_in">int</span>(line[<span class="number">4</span>])]</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> line:</span><br><span class="line">                j = <span class="built_in">str</span>(j)</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(j) == <span class="number">2</span> <span class="keyword">or</span> <span class="built_in">len</span>(j) == <span class="number">9</span>:</span><br><span class="line">                    f.write(<span class="string">&#x27;   &#x27;</span>+j)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    f.write(<span class="string">&#x27;    &#x27;</span>+j)</span><br><span class="line">            f.write(<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vasp编译</title>
      <link href="//2023/05/16/vasp%E7%BC%96%E8%AF%91/"/>
      <url>//2023/05/16/vasp%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<blockquote><p>编译版本为vasp6.4.0版本</p></blockquote><h1>编译前准备</h1><h2 id="附加包编译">附加包编译</h2><blockquote><p>这些包为<code>vasp</code>提供了一些附加功能，可选择其中内容编译, 不需要其中功能可直接跳到下一节<a href="#vasp%E7%BC%96%E8%AF%91">vasp编译</a></p></blockquote><h3 id="VTST补丁">VTST补丁</h3><blockquote><p>过渡态计算插件</p></blockquote><p><code>VTST</code>具体安装流程参考<a href="https://theory.cm.utexas.edu/vtsttools/installation.html">官网</a></p><p>从<a href="https://theory.cm.utexas.edu/vtsttools/download.html">此处</a>下载补丁源码<code>VTST Code</code></p><p>将VTST源码从<code>vtstcode-197/vtstcode6.4/</code>复制到<code>vasp</code>源码的<code>src</code>目录下</p><p>并将<code>main.F</code>中</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> CHAIN_FORCE(T_INFO<span class="title function_">%NIONS</span>,DYN<span class="title function_">%POSION</span>,TOTEN,TIFOR, &amp;</span><br><span class="line">     LATT_CUR<span class="title function_">%A</span>,LATT_CUR<span class="title function_">%B</span>,IO<span class="title function_">%IU6</span>)</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CALL</span> CHAIN_FORCE(T_INFO<span class="title function_">%NIONS</span>,DYN<span class="title function_">%POSION</span>,TOTEN,TIFOR, &amp;</span><br><span class="line">     TSIF,LATT_CUR<span class="title function_">%A</span>,LATT_CUR<span class="title function_">%B</span>,IO<span class="title function_">%IU6</span>)</span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">IF (LCHAIN) CALL <span class="built_in">chain_init</span>( T_INFO, IO)</span><br></pre></td></tr></table></figure><p>替换为</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CALL <span class="built_in">chain_init</span>( T_INFO, IO)</span><br></pre></td></tr></table></figure><p>接下来修改<code>vasp</code>源码目录<code>src</code>中<code>.objects</code>文件，在其<code>chain.o</code>前加以下内容</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bfgs<span class="selector-class">.o</span> dynmat<span class="selector-class">.o</span> instanton<span class="selector-class">.o</span> lbfgs<span class="selector-class">.o</span> sd<span class="selector-class">.o</span> cg<span class="selector-class">.o</span> dimer<span class="selector-class">.o</span> bbm<span class="selector-class">.o</span> \</span><br><span class="line">fire<span class="selector-class">.o</span> lanczos<span class="selector-class">.o</span> neb<span class="selector-class">.o</span> qm<span class="selector-class">.o</span> \</span><br><span class="line">pyamff_fortran<span class="comment">/*.o ml_pyamff.o \</span></span><br><span class="line"><span class="comment">opt.o \</span></span><br></pre></td></tr></table></figure><p>之后修改<code>src</code>目录下<code>makefile</code></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIB= lib parser pyamff_fortran</span><br></pre></td></tr></table></figure><p>如果编译多线程版本需要修改如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">dependencies: sources libs</span></span><br></pre></td></tr></table></figure><h3 id="OPT-AXIS补丁"><code>OPT_AXIS</code>补丁</h3><blockquote><p>结构优化固定基矢，二维材料必备</p></blockquote><p>去<code>OPT_AXIS</code>的<a href="https://github.com/Chengcheng-Xiao/VASP_OPT_AXIS">github管网</a>下载源码</p><p>从<code>fixing_stress_tensor</code>路径下将<code>stress_relax_finner.patch</code>复制到<code>vasp</code>路径下并执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch -p0 &lt; stress_relax_finner.patch</span><br></pre></td></tr></table></figure><p>打补丁</p><h3 id="VASPsol补丁"><code>VASPsol</code>补丁</h3><p>去<code>VASPsol</code>的<a href="https://link.zhihu.com/?target=https%3A//github.com/henniggroup/VASPsol">github官网</a>下载源码并将其中<code>src</code>目录下的<code>solvation.F</code>复制到<code>vasp.6.4.0/src</code>源码中</p><p>从<a href="https://github.com/henniggroup/VASPsol/issues/64">这个issues</a>中下载<code>vasp6.3</code>版本的补丁并使用命令</p><figure class="highlight glsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">patch</span> -p0 &lt; VASPsol_VASP630.<span class="keyword">patch</span></span><br></pre></td></tr></table></figure><p>加载补丁</p><h3 id="支持wannier90、dftd4、BEEF、HDF5、libxc的vasp编译">支持wannier90、dftd4、BEEF、HDF5、libxc的vasp编译</h3><p>编译这些库比较简单，这里就不一一列举，大多只要在与<code>vasp</code>相同的环境下使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=&lt;install path&gt;</span><br><span class="line">make all</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>即可，这些库包括<code>wannier90</code>及<code>lib</code>库<code>dftd4</code>及<code>lib</code>库<code>BEEF</code>及<code>lib</code>库<code>HEF5</code>及<code>lib</code>库<code>libxc</code>，它们的功能可去官网自行了解。编译好上述软件后只需在<code>vasp</code>源码根目录下的<code>arch</code>目录中复制<code>makefile.include.intel</code>到根目录中并命名<code>makefile.include</code>然后配置其路径即可，如果对<code>openmp</code>有了解可选择<code>makefile.include.intel_omp</code>作为<code>makefile.include</code></p><p>将下面内容中选择你需要的部分复制进<code>makefile.include</code>末尾并修改对应的路径即可</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HDF5-support (optional but strongly recommended)</span></span><br><span class="line">CPP_OPTIONS+= -DVASP_HDF5</span><br><span class="line">HDF5_ROOT  ?= /path/to/your/hdf5</span><br><span class="line">LLIBS      += -L<span class="variable">$(HDF5_ROOT)</span>/lib -lhdf5_fortran</span><br><span class="line">INCS       += -I<span class="variable">$(HDF5_ROOT)</span>/<span class="keyword">include</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For the VASP-2-Wannier90 interface (optional)</span></span><br><span class="line">CPP_OPTIONS    += -DVASP2WANNIER90</span><br><span class="line">WANNIER90_ROOT ?= /path/to/your/wannier90-3.1.0</span><br><span class="line">LLIBS           += -L<span class="variable">$(WANNIER90_ROOT)</span>/lib -lwannier</span><br><span class="line"></span><br><span class="line"><span class="comment"># For the dft-d4 interface (optional)</span></span><br><span class="line">CPP_OPTIONS += -DDFTD4</span><br><span class="line">LLIBS       += <span class="variable">$(<span class="built_in">shell</span> pkg-config --libs dftd4)</span></span><br><span class="line">INCS        += <span class="variable">$(<span class="built_in">shell</span> pkg-config --cflags dftd4)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For the beef vdw interface (optional)</span></span><br><span class="line">CPP_OPTIONS += -Dlibbeef</span><br><span class="line">LLIBS       += -L/path/to/your/libbeef/lib/lib -lbeef</span><br><span class="line"></span><br><span class="line"><span class="comment"># For the libxc interface (optional)</span></span><br><span class="line">CPP_OPTIONS += -DUSELIBXC</span><br><span class="line">LIBXC_ROOT  ?= /path/to/your/libxc/installation</span><br><span class="line">LLIBS       += -L<span class="variable">$(LIBXC_ROOT)</span>/lib -lxcf03 -lxc</span><br><span class="line">INCS        += -I<span class="variable">$(LIBXC_ROOT)</span>/<span class="keyword">include</span></span><br></pre></td></tr></table></figure><h2 id="vasp编译">vasp编译</h2><p>修改<code>makefile.include</code>中<code>mkl</code>路径并将<code>FCL</code>后的<code>qmkl</code>改为<code>mkl</code>，最终修改结果如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FCL        += -mkl=sequential</span><br><span class="line">MKLROOT    ?= /path/to/your/intel/mkl/dir</span><br></pre></td></tr></table></figure><p>修改编译器参数如下</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VASP_TARGET_CPU ?= -xHOST -heap-<span class="built_in">array</span>s <span class="number">64</span></span><br></pre></td></tr></table></figure><p>如果报错不支持<code>SSE</code>指令集则在最后一行加如下内容打开<code>SSE</code>支持</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">CXXFLAGS</span> += -xSSE4.<span class="number">2</span></span><br><span class="line"><span class="attribute">CFLAGS</span> += -xSSE4.<span class="number">2</span></span><br><span class="line"><span class="attribute">FFLAGS</span> += -xSSE4.<span class="number">2</span></span><br></pre></td></tr></table></figure><p>最后使用<code>make DEPS=1 -jN all</code>命令编译三个版本的<code>vasp</code>，其中<code>N</code>为使用核数</p><p>完整的<code>makefile.include</code>文件如下</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Default precompiler options</span></span><br><span class="line">CPP_OPTIONS = -DHOST=\<span class="string">&quot;LinuxIFC\&quot; \</span></span><br><span class="line"><span class="string">              -DMPI -DMPI_BLOCK=8000 -Duse_collective \</span></span><br><span class="line"><span class="string">              -DscaLAPACK \</span></span><br><span class="line"><span class="string">              -DCACHE_SIZE=4000 \</span></span><br><span class="line"><span class="string">              -Davoidalloc \</span></span><br><span class="line"><span class="string">              -Dvasp6 \</span></span><br><span class="line"><span class="string">              -Duse_bse_te \</span></span><br><span class="line"><span class="string">              -Dtbdyn \</span></span><br><span class="line"><span class="string">              -Dfock_dblbuf</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CPP         = fpp -f_com=no -free -w0  <span class="variable">$*</span><span class="variable">$(FUFFIX)</span> <span class="variable">$*</span><span class="variable">$(SUFFIX)</span> <span class="variable">$(CPP_OPTIONS)</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">FC          = mpiifort</span></span><br><span class="line"><span class="string">FCL         = mpiifort</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">FREE        = -free -names lowercase</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">FFLAGS      = -assume byterecl -w</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OFLAG       = -O2</span></span><br><span class="line"><span class="string">OFLAG_IN    = <span class="variable">$(OFLAG)</span></span></span><br><span class="line"><span class="string">DEBUG       = -O0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OBJECTS     = fftmpiw.o fftmpi_map.o fftw3d.o fft3dlib.o</span></span><br><span class="line"><span class="string">OBJECTS_O1 += fftw3d.o fftmpi.o fftmpiw.o</span></span><br><span class="line"><span class="string">OBJECTS_O2 += fft3dlib.o</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For what used to be vasp.5.lib</span></span><br><span class="line"><span class="string">CPP_LIB     = <span class="variable">$(CPP)</span></span></span><br><span class="line"><span class="string">FC_LIB      = <span class="variable">$(FC)</span></span></span><br><span class="line"><span class="string">CC_LIB      = icc</span></span><br><span class="line"><span class="string">CFLAGS_LIB  = -O</span></span><br><span class="line"><span class="string">FFLAGS_LIB  = -O1</span></span><br><span class="line"><span class="string">FREE_LIB    = <span class="variable">$(FREE)</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">OBJECTS_LIB = linpack_double.o</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For the parser library</span></span><br><span class="line"><span class="string">CXX_PARS    = icpc</span></span><br><span class="line"><span class="string">LLIBS       = -lstdc++</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">##</span></span><br><span class="line"><span class="string">## Customize as of this point! Of course you may change the preceding</span></span><br><span class="line"><span class="string">## part of this file as well if you like, but it should rarely be</span></span><br><span class="line"><span class="string">## necessary ...</span></span><br><span class="line"><span class="string">##</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># When compiling on the target machine itself, change this to the</span></span><br><span class="line"><span class="string"># relevant target when cross-compiling for another architecture</span></span><br><span class="line"><span class="string">VASP_TARGET_CPU ?= -xHOST -heap-arrays 64</span></span><br><span class="line"><span class="string">FFLAGS     += <span class="variable">$(VASP_TARGET_CPU)</span></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># Intel MKL (FFTW, BLAS, LAPACK, and scaLAPACK)</span></span><br><span class="line"><span class="string"># (Note: for Intel Parallel Studio&#x27;s MKL use -mkl instead of -qmkl)</span></span><br><span class="line"><span class="string">FCL        += -mkl=sequential</span></span><br><span class="line"><span class="string">MKLROOT    ?= /path/to/your/intel/mkl/dir</span></span><br><span class="line"><span class="string">LLIBS      += -L<span class="variable">$(MKLROOT)</span>/lib/intel64 -lmkl_scalapack_lp64 -lmkl_blacs_intelmpi_lp64</span></span><br><span class="line"><span class="string">INCS        =-I<span class="variable">$(MKLROOT)</span>/include/fftw</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># HDF5-support (optional but strongly recommended)</span></span><br><span class="line"><span class="string">CPP_OPTIONS+= -DVASP_HDF5</span></span><br><span class="line"><span class="string">HDF5_ROOT  ?= /path/to/your/hdf5</span></span><br><span class="line"><span class="string">LLIBS      += -L<span class="variable">$(HDF5_ROOT)</span>/lib -lhdf5_fortran</span></span><br><span class="line"><span class="string">INCS       += -I<span class="variable">$(HDF5_ROOT)</span>/include</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For the VASP-2-Wannier90 interface (optional)</span></span><br><span class="line"><span class="string">CPP_OPTIONS    += -DVASP2WANNIER90</span></span><br><span class="line"><span class="string">WANNIER90_ROOT ?= /path/to/your/wannier90-3.1.0</span></span><br><span class="line"><span class="string">LLIBS           += -L<span class="variable">$(WANNIER90_ROOT)</span>/lib -lwannier</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For the dft-d4 interface (optional)</span></span><br><span class="line"><span class="string">CPP_OPTIONS += -DDFTD4</span></span><br><span class="line"><span class="string">LLIBS       += $(shell pkg-config --libs dftd4)</span></span><br><span class="line"><span class="string">INCS        += $(shell pkg-config --cflags dftd4)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For the beef vdw interface (optional)</span></span><br><span class="line"><span class="string">CPP_OPTIONS += -Dlibbeef</span></span><br><span class="line"><span class="string">LLIBS       += -L/path/to/your/libbeef/lib/lib -lbeef</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For the libxc interface (optional)</span></span><br><span class="line"><span class="string">CPP_OPTIONS += -DUSELIBXC</span></span><br><span class="line"><span class="string">LIBXC_ROOT  ?= /path/to/your/libxc/installation</span></span><br><span class="line"><span class="string">LLIBS       += -L<span class="variable">$(LIBXC_ROOT)</span>/lib -lxcf03 -lxc</span></span><br><span class="line"><span class="string">INCS        += -I<span class="variable">$(LIBXC_ROOT)</span>/include</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># For the VASPsol interface (optional)</span></span><br><span class="line"><span class="string">CPP_OPTIONS += -Dsol_compat</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CXXFLAGS += -xSSE4.2</span></span><br><span class="line"><span class="string">CFLAGS += -xSSE4.2</span></span><br><span class="line"><span class="string">FFLAGS += -xSSE4.2</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件编译 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编译 </tag>
            
            <tag> vasp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C4D建模及优化</title>
      <link href="//2023/04/18/C4D%E5%BB%BA%E6%A8%A1%E5%8F%8A%E4%BC%98%E5%8C%96/"/>
      <url>//2023/04/18/C4D%E5%BB%BA%E6%A8%A1%E5%8F%8A%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<blockquote><p>阅读前请先了解<code>VESTA</code>及<code>C4D</code>的基础用法，有一定Python基础更佳。</p></blockquote><h2 id="获取晶体结构">获取晶体结构</h2><p>晶体及分子结构文件可通过结构数据库<a href="https://materialsproject.org/">Materials Project</a>和<a href="http://www.crystallography.net/cod/search.html">开放晶体学数据库</a>中得到<code>cif</code>等<code>VESTA</code>软件支持的格式，使用<code>VESTA</code>打开后经扩胞等操作调整为想要的样式后导出为<code>wrl</code>格式供<code>C4D</code>使用，流程图如下。</p><pre class="mermaid">graph TD;获取cif等格式的结构文件 --> VESTA中调整样式;VESTA中调整样式 --> 导出为wrl格式文件导入C4D;导出为wrl格式文件导入C4D --> C4D中使用优化脚本;C4D中使用优化脚本 --> 使用C4D得到图片;</pre><h2 id="两个C4D脚本">两个<code>C4D</code>脚本</h2><p>由于<code>vasp</code>导出后原子是近球多面体而非球体，而在搭建示意图时常常会导入成百上千原子使，会占用过多内存使渲染速度及使用流畅度大打折扣，因此编写以下脚本加速渲染及使用。使用时打开<code>C4D</code>自带的脚本管理器新建脚本，删除其中内容并将脚本内容复制粘贴直接运行即可。</p><h3 id="多面体优化成球体">多面体优化成球体</h3><p>此脚本会将当前工程中所有多面体对象转化成同等大小的球体对象并将原多面体材质应用于新加的球体上，其他保持不变，通过修改<code>mat[layer.GetDataID() + c4d.REFLECTION_LAYER_MAIN_VALUE_ROUGHNESS] = 0.8</code>的值可修改材质反射层粗糙度，对输出效果进行批量调整，也可转化完成后在<code>C4D</code>材质编辑器中手动修改。</p><p %="" endnote="" %="">{ % note warning % }<code>C4D R19</code>及以上版本可用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> c4d</span><br><span class="line"><span class="keyword">from</span> c4d <span class="keyword">import</span> gui</span><br><span class="line"></span><br><span class="line"><span class="comment"># doc: c4d.documents.BaseDocument  # The currently active document.</span></span><br><span class="line"><span class="comment"># op: typing.Optional[c4d.BaseObject]  # The selected object within that active document. Can be None.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CreateAtom</span>(<span class="params">P,R</span>):</span><br><span class="line"></span><br><span class="line">    atom = c4d.BaseObject(c4d.Osphere)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set atom radius</span></span><br><span class="line">    atom[c4d.PRIM_SPHERE_RAD] = R</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set atom postion</span></span><br><span class="line">    atom.SetAbsPos(P)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> atom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> doc.GetObjects():</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> obj.CheckType(c4d.Opolygon):</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get object material and reflection layer</span></span><br><span class="line">        mat = obj.GetTag(c4d.Ttexture)</span><br><span class="line">        mat = mat[c4d.TEXTURETAG_MATERIAL]</span><br><span class="line">        layer = mat.GetReflectionLayerIndex(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Sets the Layer to GGX mode</span></span><br><span class="line">        mat[layer.GetDataID() + c4d.REFLECTION_LAYER_MAIN_DISTRIBUTION] = c4d.REFLECTION_DISTRIBUTION_GGX</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Defines the Roughness float value</span></span><br><span class="line">        mat[layer.GetDataID() + c4d.REFLECTION_LAYER_MAIN_VALUE_ROUGHNESS] = <span class="number">0.8</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Defines the layer color value to material color</span></span><br><span class="line">        mat[layer.GetDataID() + c4d.REFLECTION_LAYER_COLOR_COLOR] = mat[c4d.MATERIAL_COLOR_COLOR]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get object position</span></span><br><span class="line">        P= obj.GetAbsPos()</span><br><span class="line">        local_radius = obj.GetRad()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># get global matrix</span></span><br><span class="line">        global_mat = obj.GetMg()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># calculate global radius</span></span><br><span class="line">        R = local_radius * global_mat.v1.GetLength()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># create atom</span></span><br><span class="line">        atom = CreateAtom(P,R[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># apply material to atom</span></span><br><span class="line">        textureTag = atom.GetTag(c4d.Ttexture)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> textureTag:</span><br><span class="line">            textureTag = atom.MakeTag(c4d.Ttexture)</span><br><span class="line">        textureTag[c4d.TEXTURETAG_MATERIAL] = mat</span><br><span class="line"></span><br><span class="line">        <span class="comment"># insert atom to document</span></span><br><span class="line">        doc.InsertObject(atom)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># remove old object</span></span><br><span class="line">        obj.Remove()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="创建指定原子组成的平台">创建指定原子组成的平台</h3><p>此脚本会删除当面工程中所有对象及材质并创建不同原子的材质，之后创建原子平面应用对应的材质，可通过<code>CreatePlat()</code>函数中传入参数<code>X</code>、<code>Y</code>、<code>Z</code>及<code>label</code>参数控制XYZ方向原子数及原子类型，默认是$20\times 2\times 20$的<code>Sn</code>原子平面。</p><p>配色参考<a href="https://zh.wikipedia.org/wiki/CPK%E9%85%8D%E8%89%B2">CPK配色Wiki</a>，原子半径比值参考<a href="https://ptable.com/#Properties">元素周期表</a>。</p><p %="" endnote="" %="">{ % note warning % }编写平台<code>C4D 2023</code>，<code>C4D R19</code>版本不可用</p><p %="" endnote="" %="">{ % note warning % }此脚本会删除当前工程中所有材质及对象不可撤销，请务必在空项目中使用此脚本。</p><blockquote><p>如有<code>Python</code>基础可删除<code>clear()</code>函数使其不再删除所有对象并通过<code>CreateAtom(P,label='H')</code>中<code>P</code>参数及<code>label</code>参数在指定坐标创建指定原子。通过第一个<code>for</code>循环中的<code>mat</code>及<code>layer</code>对象可以批量调整材质的具体参数。也可通过<code>C4D</code>手动调整。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> c4d</span><br><span class="line"></span><br><span class="line"><span class="comment"># define atoms radius map</span></span><br><span class="line">Radius = &#123;</span><br><span class="line">        <span class="string">&quot;H&quot;</span>: <span class="number">37</span>, <span class="string">&quot;He&quot;</span>: <span class="number">32</span>, <span class="string">&quot;Li&quot;</span>: <span class="number">134</span>, <span class="string">&quot;Be&quot;</span>: <span class="number">90</span>, <span class="string">&quot;B&quot;</span>: <span class="number">82</span>, <span class="string">&quot;C&quot;</span>: <span class="number">77</span>, <span class="string">&quot;N&quot;</span>: <span class="number">75</span>, <span class="string">&quot;O&quot;</span>: <span class="number">73</span>, <span class="string">&quot;F&quot;</span>: <span class="number">71</span>, <span class="string">&quot;Ne&quot;</span>: <span class="number">69</span>, <span class="string">&quot;Na&quot;</span>: <span class="number">154</span>, <span class="string">&quot;Mg&quot;</span>: <span class="number">130</span>, <span class="string">&quot;Al&quot;</span>: <span class="number">118</span>, <span class="string">&quot;Si&quot;</span>: <span class="number">111</span>, <span class="string">&quot;P&quot;</span>: <span class="number">106</span>, <span class="string">&quot;S&quot;</span>: <span class="number">102</span>, <span class="string">&quot;Cl&quot;</span>: <span class="number">99</span>, <span class="string">&quot;Ar&quot;</span>: <span class="number">97</span>, <span class="string">&quot;K&quot;</span>: <span class="number">196</span>, <span class="string">&quot;Ca&quot;</span>: <span class="number">174</span>, <span class="string">&quot;Sc&quot;</span>: <span class="number">144</span>, <span class="string">&quot;Ti&quot;</span>: <span class="number">136</span>, <span class="string">&quot;V&quot;</span>: <span class="number">125</span>, <span class="string">&quot;Cr&quot;</span>: <span class="number">127</span>, <span class="string">&quot;Mn&quot;</span>: <span class="number">139</span>, <span class="string">&quot;Fe&quot;</span>: <span class="number">125</span>, <span class="string">&quot;Co&quot;</span>: <span class="number">126</span>, <span class="string">&quot;Ni&quot;</span>: <span class="number">121</span>, <span class="string">&quot;Cu&quot;</span>: <span class="number">138</span>, <span class="string">&quot;Zn&quot;</span>: <span class="number">131</span>, <span class="string">&quot;Ga&quot;</span>: <span class="number">126</span>, <span class="string">&quot;Ge&quot;</span>: <span class="number">122</span>, <span class="string">&quot;As&quot;</span>: <span class="number">119</span>, <span class="string">&quot;Se&quot;</span>: <span class="number">116</span>, <span class="string">&quot;Br&quot;</span>: <span class="number">114</span>, <span class="string">&quot;Kr&quot;</span>: <span class="number">110</span>, <span class="string">&quot;Rb&quot;</span>: <span class="number">211</span>, <span class="string">&quot;Sr&quot;</span>: <span class="number">192</span>, <span class="string">&quot;Y&quot;</span>: <span class="number">162</span>, <span class="string">&quot;Zr&quot;</span>: <span class="number">148</span>, <span class="string">&quot;Nb&quot;</span>: <span class="number">137</span>, <span class="string">&quot;Mo&quot;</span>: <span class="number">145</span>, <span class="string">&quot;Tc&quot;</span>: <span class="number">156</span>, <span class="string">&quot;Ru&quot;</span>: <span class="number">126</span>, <span class="string">&quot;Rh&quot;</span>: <span class="number">135</span>, <span class="string">&quot;Pd&quot;</span>: <span class="number">131</span>, <span class="string">&quot;Ag&quot;</span>: <span class="number">153</span>, <span class="string">&quot;Cd&quot;</span>: <span class="number">148</span>, <span class="string">&quot;In&quot;</span>: <span class="number">144</span>, <span class="string">&quot;Sn&quot;</span>: <span class="number">141</span>, <span class="string">&quot;Sb&quot;</span>: <span class="number">138</span>, <span class="string">&quot;Te&quot;</span>: <span class="number">135</span>, <span class="string">&quot;I&quot;</span>: <span class="number">133</span>, <span class="string">&quot;Xe&quot;</span>: <span class="number">130</span>, <span class="string">&quot;Cs&quot;</span>: <span class="number">225</span>, <span class="string">&quot;Ba&quot;</span>: <span class="number">198</span>, <span class="string">&quot;La&quot;</span>: <span class="number">169</span>, <span class="string">&quot;Ce&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Pr&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Nd&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Pm&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Sm&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Eu&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Gd&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Tb&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Dy&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Ho&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Er&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Tm&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Yb&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Lu&quot;</span>: <span class="number">160</span>, <span class="string">&quot;Hf&quot;</span>: <span class="number">150</span>, <span class="string">&quot;Ta&quot;</span>: <span class="number">138</span>, <span class="string">&quot;W&quot;</span>: <span class="number">146</span>, <span class="string">&quot;Re&quot;</span>: <span class="number">159</span>, <span class="string">&quot;Os&quot;</span>: <span class="number">128</span>, <span class="string">&quot;Ir&quot;</span>: <span class="number">137</span>, <span class="string">&quot;Pt&quot;</span>: <span class="number">128</span>, <span class="string">&quot;Au&quot;</span>: <span class="number">144</span>, <span class="string">&quot;Hg&quot;</span>: <span class="number">149</span>, <span class="string">&quot;Tl&quot;</span>: <span class="number">148</span>, <span class="string">&quot;Pb&quot;</span>: <span class="number">147</span>, <span class="string">&quot;Bi&quot;</span>: <span class="number">146</span>, <span class="string">&quot;Po&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;At&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Rn&quot;</span>: <span class="number">145</span>, <span class="string">&quot;Fr&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Ra&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Ac&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Th&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Pa&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;U&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Np&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Pu&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Am&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Cm&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Bk&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Cf&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Es&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Fm&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Md&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;No&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Lr&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Rf&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Db&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Sg&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Bh&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Hs&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Mt&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Ds&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Rg&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Cn&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Nh&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Fl&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Mc&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Lv&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Ts&quot;</span>: <span class="string">&quot;nan&quot;</span>, <span class="string">&quot;Og&quot;</span>: <span class="string">&quot;nan&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># define atoms color map</span></span><br><span class="line">colors = &#123;</span><br><span class="line">        <span class="string">&quot;H&quot;</span>: [<span class="number">8</span>, <span class="number">11</span>, <span class="number">12</span>], <span class="string">&quot;He&quot;</span>: [<span class="number">0</span>, <span class="number">66</span>, <span class="number">66</span>], <span class="string">&quot;Li&quot;</span>: [<span class="number">68</span>, <span class="number">0</span>, <span class="number">127</span>], <span class="string">&quot;Be&quot;</span>: [<span class="number">126</span>, <span class="number">157</span>, <span class="number">0</span>], <span class="string">&quot;B&quot;</span>: [<span class="number">90</span>, <span class="number">0</span>, <span class="number">0</span>], <span class="string">&quot;C&quot;</span>: [<span class="number">81</span>, <span class="number">89</span>, <span class="number">94</span>], <span class="string">&quot;N&quot;</span>: [<span class="number">0</span>, <span class="number">19</span>, <span class="number">181</span>], <span class="string">&quot;O&quot;</span>: [<span class="number">206</span>, <span class="number">0</span>, <span class="number">0</span>], <span class="string">&quot;F&quot;</span>: [<span class="number">92</span>, <span class="number">151</span>, <span class="number">11</span>], <span class="string">&quot;Ne&quot;</span>: [<span class="number">0</span>, <span class="number">60</span>, <span class="number">86</span>], <span class="string">&quot;Na&quot;</span>: [<span class="number">75</span>, <span class="number">0</span>, <span class="number">148</span>], <span class="string">&quot;Mg&quot;</span>: [<span class="number">135</span>, <span class="number">215</span>, <span class="number">0</span>], <span class="string">&quot;Al&quot;</span>: [<span class="number">76</span>, <span class="number">50</span>, <span class="number">50</span>], <span class="string">&quot;Si&quot;</span>: [<span class="number">97</span>, <span class="number">49</span>, <span class="number">0</span>], <span class="string">&quot;P&quot;</span>: [<span class="number">215</span>, <span class="number">98</span>, <span class="number">0</span>], <span class="string">&quot;S&quot;</span>: [<span class="number">132</span>, <span class="number">132</span>, <span class="number">0</span>], <span class="string">&quot;Cl&quot;</span>: [<span class="number">44</span>, <span class="number">190</span>, <span class="number">0</span>], <span class="string">&quot;Ar&quot;</span>: [<span class="number">11</span>, <span class="number">97</span>, <span class="number">117</span>], <span class="string">&quot;K&quot;</span>: [<span class="number">96</span>, <span class="number">21</span>, <span class="number">160</span>], <span class="string">&quot;Ca&quot;</span>: [<span class="number">82</span>, <span class="number">215</span>, <span class="number">0</span>], <span class="string">&quot;Sc&quot;</span>: [<span class="number">25</span>, <span class="number">28</span>, <span class="number">30</span>], <span class="string">&quot;Ti&quot;</span>: [<span class="number">48</span>, <span class="number">53</span>, <span class="number">56</span>], <span class="string">&quot;V&quot;</span>: [<span class="number">65</span>, <span class="number">72</span>, <span class="number">75</span>], <span class="string">&quot;Cr&quot;</span>: [<span class="number">38</span>, <span class="number">54</span>, <span class="number">102</span>], <span class="string">&quot;Mn&quot;</span>: [<span class="number">71</span>, <span class="number">37</span>, <span class="number">114</span>], <span class="string">&quot;Fe&quot;</span>: [<span class="number">173</span>, <span class="number">58</span>, <span class="number">10</span>], <span class="string">&quot;Co&quot;</span>: [<span class="number">110</span>, <span class="number">0</span>, <span class="number">17</span>], <span class="string">&quot;Ni&quot;</span>: [<span class="number">57</span>, <span class="number">148</span>, <span class="number">26</span>], <span class="string">&quot;Cu&quot;</span>: [<span class="number">165</span>, <span class="number">98</span>, <span class="number">28</span>], <span class="string">&quot;Zn&quot;</span>: [<span class="number">58</span>, <span class="number">60</span>, <span class="number">107</span>], <span class="string">&quot;Ga&quot;</span>: [<span class="number">96</span>, <span class="number">44</span>, <span class="number">44</span>], <span class="string">&quot;Ge&quot;</span>: [<span class="number">75</span>, <span class="number">112</span>, <span class="number">112</span>], <span class="string">&quot;As&quot;</span>: [<span class="number">76</span>, <span class="number">11</span>, <span class="number">117</span>], <span class="string">&quot;Se&quot;</span>: [<span class="number">215</span>, <span class="number">129</span>, <span class="number">0</span>], <span class="string">&quot;Br&quot;</span>: [<span class="number">134</span>, <span class="number">19</span>, <span class="number">19</span>], <span class="string">&quot;Kr&quot;</span>: [<span class="number">26</span>, <span class="number">114</span>, <span class="number">140</span>], <span class="string">&quot;Rb&quot;</span>: [<span class="number">84</span>, <span class="number">23</span>, <span class="number">143</span>], <span class="string">&quot;Sr&quot;</span>: [<span class="number">40</span>, <span class="number">215</span>, <span class="number">0</span>], <span class="string">&quot;Y&quot;</span>: [<span class="number">0</span>, <span class="number">113</span>, <span class="number">113</span>], <span class="string">&quot;Zr&quot;</span>: [<span class="number">15</span>, <span class="number">100</span>, <span class="number">100</span>], <span class="string">&quot;Nb&quot;</span>: [<span class="number">35</span>, <span class="number">113</span>, <span class="number">120</span>], <span class="string">&quot;Mo&quot;</span>: [<span class="number">50</span>, <span class="number">140</span>, <span class="number">140</span>], <span class="string">&quot;Tc&quot;</span>: [<span class="number">35</span>, <span class="number">126</span>, <span class="number">126</span>], <span class="string">&quot;Ru&quot;</span>: [<span class="number">14</span>, <span class="number">112</span>, <span class="number">112</span>], <span class="string">&quot;Rh&quot;</span>: [<span class="number">0</span>, <span class="number">96</span>, <span class="number">110</span>], <span class="string">&quot;Pd&quot;</span>: [<span class="number">0</span>, <span class="number">77</span>, <span class="number">103</span>], <span class="string">&quot;Ag&quot;</span>: [<span class="number">50</span>, <span class="number">56</span>, <span class="number">58</span>], <span class="string">&quot;Cd&quot;</span>: [<span class="number">117</span>, <span class="number">71</span>, <span class="number">0</span>], <span class="string">&quot;In&quot;</span>: [<span class="number">113</span>, <span class="number">67</span>, <span class="number">65</span>], <span class="string">&quot;Sn&quot;</span>: [<span class="number">81</span>, <span class="number">89</span>, <span class="number">92</span>], <span class="string">&quot;Sb&quot;</span>: [<span class="number">106</span>, <span class="number">51</span>, <span class="number">128</span>], <span class="string">&quot;Te&quot;</span>: [<span class="number">176</span>, <span class="number">94</span>, <span class="number">0</span>], <span class="string">&quot;I&quot;</span>: [<span class="number">117</span>, <span class="number">0</span>, <span class="number">117</span>], <span class="string">&quot;Xe&quot;</span>: [<span class="number">42</span>, <span class="number">126</span>, <span class="number">143</span>], <span class="string">&quot;Cs&quot;</span>: [<span class="number">61</span>, <span class="number">2</span>, <span class="number">112</span>], <span class="string">&quot;Ba&quot;</span>: [<span class="number">0</span>, <span class="number">166</span>, <span class="number">0</span>], <span class="string">&quot;La&quot;</span>: [<span class="number">0</span>, <span class="number">91</span>, <span class="number">138</span>], <span class="string">&quot;Ce&quot;</span>: [<span class="number">53</span>, <span class="number">53</span>, <span class="number">0</span>], <span class="string">&quot;Pr&quot;</span>: [<span class="number">29</span>, <span class="number">79</span>, <span class="number">0</span>], <span class="string">&quot;Nd&quot;</span>: [<span class="number">5</span>, <span class="number">79</span>, <span class="number">0</span>], <span class="string">&quot;Pm&quot;</span>: [<span class="number">0</span>, <span class="number">103</span>, <span class="number">48</span>], <span class="string">&quot;Sm&quot;</span>: [<span class="number">0</span>, <span class="number">117</span>, <span class="number">66</span>], <span class="string">&quot;Eu&quot;</span>: [<span class="number">0</span>, <span class="number">149</span>, <span class="number">104</span>], <span class="string">&quot;Gd&quot;</span>: [<span class="number">0</span>, <span class="number">168</span>, <span class="number">126</span>], <span class="string">&quot;Tb&quot;</span>: [<span class="number">0</span>, <span class="number">182</span>, <span class="number">142</span>], <span class="string">&quot;Dy&quot;</span>: [<span class="number">0</span>, <span class="number">194</span>, <span class="number">155</span>], <span class="string">&quot;Ho&quot;</span>: [<span class="number">0</span>, <span class="number">215</span>, <span class="number">148</span>], <span class="string">&quot;Er&quot;</span>: [<span class="number">0</span>, <span class="number">192</span>, <span class="number">89</span>], <span class="string">&quot;Tm&quot;</span>: [<span class="number">0</span>, <span class="number">176</span>, <span class="number">57</span>], <span class="string">&quot;Yb&quot;</span>: [<span class="number">0</span>, <span class="number">157</span>, <span class="number">33</span>], <span class="string">&quot;Lu&quot;</span>: [<span class="number">0</span>, <span class="number">138</span>, <span class="number">14</span>], <span class="string">&quot;Hf&quot;</span>: [<span class="number">0</span>, <span class="number">100</span>, <span class="number">163</span>], <span class="string">&quot;Ta&quot;</span>: [<span class="number">0</span>, <span class="number">72</span>, <span class="number">163</span>], <span class="string">&quot;W&quot;</span>: [<span class="number">11</span>, <span class="number">117</span>, <span class="number">178</span>], <span class="string">&quot;Re&quot;</span>: [<span class="number">15</span>, <span class="number">96</span>, <span class="number">138</span>], <span class="string">&quot;Os&quot;</span>: [<span class="number">15</span>, <span class="number">75</span>, <span class="number">119</span>], <span class="string">&quot;Ir&quot;</span>: [<span class="number">2</span>, <span class="number">58</span>, <span class="number">105</span>], <span class="string">&quot;Pt&quot;</span>: [<span class="number">34</span>, <span class="number">38</span>, <span class="number">41</span>], <span class="string">&quot;Au&quot;</span>: [<span class="number">138</span>, <span class="number">106</span>, <span class="number">0</span>], <span class="string">&quot;Hg&quot;</span>: [<span class="number">37</span>, <span class="number">37</span>, <span class="number">65</span>], <span class="string">&quot;Tl&quot;</span>: [<span class="number">134</span>, <span class="number">58</span>, <span class="number">52</span>], <span class="string">&quot;Pb&quot;</span>: [<span class="number">60</span>, <span class="number">67</span>, <span class="number">71</span>], <span class="string">&quot;Bi&quot;</span>: [<span class="number">122</span>, <span class="number">49</span>, <span class="number">144</span>], <span class="string">&quot;Po&quot;</span>: [<span class="number">138</span>, <span class="number">66</span>, <span class="number">0</span>], <span class="string">&quot;At&quot;</span>: [<span class="number">89</span>, <span class="number">53</span>, <span class="number">44</span>], <span class="string">&quot;Rn&quot;</span>: [<span class="number">42</span>, <span class="number">100</span>, <span class="number">119</span>], <span class="string">&quot;Fr&quot;</span>: [<span class="number">42</span>, <span class="number">0</span>, <span class="number">75</span>], <span class="string">&quot;Ra&quot;</span>: [<span class="number">0</span>, <span class="number">96</span>, <span class="number">0</span>], <span class="string">&quot;Ac&quot;</span>: [<span class="number">0</span>, <span class="number">50</span>, <span class="number">136</span>], <span class="string">&quot;Th&quot;</span>: [<span class="number">0</span>, <span class="number">152</span>, <span class="number">215</span>], <span class="string">&quot;Pa&quot;</span>: [<span class="number">0</span>, <span class="number">129</span>, <span class="number">215</span>], <span class="string">&quot;U&quot;</span>: [<span class="number">0</span>, <span class="number">112</span>, <span class="number">215</span>], <span class="string">&quot;Np&quot;</span>: [<span class="number">0</span>, <span class="number">98</span>, <span class="number">215</span>], <span class="string">&quot;Pu&quot;</span>: [<span class="number">0</span>, <span class="number">80</span>, <span class="number">215</span>], <span class="string">&quot;Am&quot;</span>: [<span class="number">0</span>, <span class="number">2</span>, <span class="number">153</span>], <span class="string">&quot;Cm&quot;</span>: [<span class="number">37</span>, <span class="number">8</span>, <span class="number">143</span>], <span class="string">&quot;Bk&quot;</span>: [<span class="number">66</span>, <span class="number">8</span>, <span class="number">153</span>], <span class="string">&quot;Cf&quot;</span>: [<span class="number">120</span>, <span class="number">21</span>, <span class="number">168</span>], <span class="string">&quot;Es&quot;</span>: [<span class="number">145</span>, <span class="number">10</span>, <span class="number">176</span>], <span class="string">&quot;Fm&quot;</span>: [<span class="number">145</span>, <span class="number">10</span>, <span class="number">152</span>], <span class="string">&quot;Md&quot;</span>: [<span class="number">145</span>, <span class="number">0</span>, <span class="number">134</span>], <span class="string">&quot;No&quot;</span>: [<span class="number">155</span>, <span class="number">0</span>, <span class="number">105</span>], <span class="string">&quot;Lr&quot;</span>: [<span class="number">164</span>, <span class="number">0</span>, <span class="number">75</span>], <span class="string">&quot;Rf&quot;</span>: [<span class="number">168</span>, <span class="number">0</span>, <span class="number">63</span>], <span class="string">&quot;Db&quot;</span>: [<span class="number">173</span>, <span class="number">0</span>, <span class="number">53</span>], <span class="string">&quot;Sg&quot;</span>: [<span class="number">181</span>, <span class="number">0</span>, <span class="number">44</span>], <span class="string">&quot;Bh&quot;</span>: [<span class="number">187</span>, <span class="number">0</span>, <span class="number">33</span>], <span class="string">&quot;Hs&quot;</span>: [<span class="number">192</span>, <span class="number">0</span>, <span class="number">23</span>], <span class="string">&quot;Mt&quot;</span>: [<span class="number">197</span>, <span class="number">0</span>, <span class="number">15</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># clear all objects in document</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">clear</span>():</span><br><span class="line">    <span class="keyword">for</span> obj <span class="keyword">in</span> doc.GetObjects():</span><br><span class="line">        obj.Remove()</span><br><span class="line">    <span class="keyword">for</span> mat <span class="keyword">in</span> doc.GetMaterials():</span><br><span class="line">        mat.Remove()</span><br><span class="line"></span><br><span class="line">clear()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># create atoms&#x27; material</span></span><br><span class="line">mats = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> atom <span class="keyword">in</span> colors:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">type</span>(colors[atom]) == <span class="built_in">list</span>:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> ori_mat <span class="keyword">in</span> doc.GetMaterials():</span><br><span class="line">            <span class="keyword">if</span> ori_mat.GetName() == atom:</span><br><span class="line">                ori_mat.Remove()</span><br><span class="line"></span><br><span class="line">        mat = c4d.BaseMaterial(c4d.Mmaterial)</span><br><span class="line">        color = colors[atom]</span><br><span class="line">        color = c4d.Vector(*[c/<span class="number">225</span> <span class="keyword">for</span> c <span class="keyword">in</span> color])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">#mat.RemoveReflectionLayerIndex(0)</span></span><br><span class="line">        <span class="comment"># add reflect layer</span></span><br><span class="line">        layer = mat.AddReflectionLayer()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Sets the Layer to GGX mode</span></span><br><span class="line">        mat[layer.GetDataID() + c4d.REFLECTION_LAYER_MAIN_DISTRIBUTION] = c4d.REFLECTION_DISTRIBUTION_GGX</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Defines the Roughness float value</span></span><br><span class="line">        mat[layer.GetDataID() + c4d.REFLECTION_LAYER_MAIN_VALUE_ROUGHNESS] = <span class="number">0.75</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># Defines the layer color value</span></span><br><span class="line">        mat[layer.GetDataID() + c4d.REFLECTION_LAYER_COLOR_COLOR] = color</span><br><span class="line"></span><br><span class="line">        <span class="comment"># use reflect layer</span></span><br><span class="line">        mat[c4d.MATERIAL_USE_REFLECTION] = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># set material base color</span></span><br><span class="line">        mat[c4d.MATERIAL_COLOR_COLOR] = color</span><br><span class="line"></span><br><span class="line">        <span class="comment"># set material name</span></span><br><span class="line">        mat.SetName(atom)</span><br><span class="line"></span><br><span class="line">        mats[atom] = mat</span><br><span class="line"></span><br><span class="line">        <span class="comment"># insert materials into document</span></span><br><span class="line">        doc.InsertMaterial(mat)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CreateAtom</span>(<span class="params">P,label=<span class="string">&#x27;H&#x27;</span></span>):</span><br><span class="line"></span><br><span class="line">    atom = c4d.BaseObject(c4d.Osphere)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set atom radius</span></span><br><span class="line">    atom[c4d.PRIM_SPHERE_RAD] = Radius[label]*<span class="number">0.02</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># apply atom&#x27;s material to atom</span></span><br><span class="line">    textureTag = atom.GetTag(c4d.Ttexture)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> textureTag:</span><br><span class="line">        textureTag = atom.MakeTag(c4d.Ttexture)</span><br><span class="line">    textureTag[c4d.TEXTURETAG_MATERIAL] = mats[label]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># set atom postion</span></span><br><span class="line">    atom.SetAbsPos(c4d.Vector(*P))</span><br><span class="line">    atom.SetName(label)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># add atom to document</span></span><br><span class="line">    doc.InsertObject(atom)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> atom</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">CreatePlat</span>(<span class="params">X=<span class="number">20</span>, Y=<span class="number">2</span>, Z=<span class="number">20</span>, label=<span class="string">&#x27;Sn&#x27;</span></span>):</span><br><span class="line"></span><br><span class="line">    plat = c4d.BaseObject(c4d.Onull)</span><br><span class="line"></span><br><span class="line">    d = Radius[label]*<span class="number">0.04</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(X):</span><br><span class="line">        <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(Y):</span><br><span class="line">            <span class="keyword">for</span> z <span class="keyword">in</span> <span class="built_in">range</span>(Z):</span><br><span class="line">                atom =  CreateAtom([x*d,y*d,z*d], label=label)</span><br><span class="line">                atom.SetName(label+<span class="string">&#x27;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(x+y+z))</span><br><span class="line">                atom.InsertUnder(plat)</span><br><span class="line"></span><br><span class="line">    doc.InsertObject(plat)</span><br><span class="line"></span><br><span class="line">CreatePlat()</span><br></pre></td></tr></table></figure><p>脚本编写参考<a href="https://developers.maxon.net/docs/cpp/2023_2/index.html">官方文档</a>及<a href="https://github.com/PluginCafe/cinema4d_py_sdk_extended">官方案例</a>。</p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 科研绘图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vasp计算笔记</title>
      <link href="//2022/12/25/vasp%E8%AE%A1%E7%AE%97%E7%AC%94%E8%AE%B0/"/>
      <url>//2022/12/25/vasp%E8%AE%A1%E7%AE%97%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="偶极校正">偶极校正</h3><p>功函数定义为</p><p>$E_F=E_{vac}-E_{fermi}$</p><blockquote><p>因 VASP 所适用的体系是周期性体系，使用它来模拟实验中的 Slab 模型时会取一个相当大的真空层来隔绝相邻两个周期中 Slab 的相互作用。理想情况下，真空层中的功函数应当是一条水平的直线（函数值为定值）。但如果表面的两侧并非对称，即其中一侧吸附了分子时， 这两侧的功函数存在差异，此时如果不进行偶极校正，真空中的功函数会是一条斜线；而经过偶极校正后，功函数会出现一个阶梯，阶梯两侧附近的曲接近水平</p></blockquote><blockquote><p>Because of the system applicable to <code>VASP</code> is a periodic system, a relatively large vacuum layer is used to isolate the interaction between the slabs in two periods when simulation s Slab model in experiments.</p></blockquote><p>VASP 中直接使用 <code>LDIPOL</code> 和 <code>IDPOL</code> 即可开启它的偶极校正功能</p><ul><li><code>LDIPOL = .TRUE.</code> 表示打开偶极校正</li><li><code>IDIPOL = 3</code> 表示偶极校正方向为第三晶格矢</li><li><code>DIPOL = &lt;3 float values&gt;</code> 表示体系的中心，以分数坐标表示</li></ul><p>一般来说 DIPOL 不用填，<a href="https://www.vasp.at/wiki/index.php/DIPOL">VASP 手册</a> 中有：</p><blockquote><p>If the flag is not set, VASP determines, where the charge density averaged over one plane drops to a minimum and calculates the center of the charge distribution by adding half of the lattice vector perpendicular to the plane where the charge density has a minimum (this is a rather reliable approach for orthorhombic cells).</p></blockquote><p>若体系难以收敛可手动计算原子坐标平均值并设置<code>DIPOL = 0.5 0.5 &lt;z averaged z&gt;</code>，若修正效果不到预期可以：</p><ol><li>打开偶极校正并设置上述<code>DIPOL = 0.5 0.5 &lt;z averaged&gt;</code>进行弛豫计算</li><li>关闭<code>DIPOL</code>，再次进行弛豫计算</li><li>关闭<code>DIPOL</code>，打开<code>LVHAR = .TRUE.</code>进去静态计算得到功函数</li></ol><p>若出现功函数台阶即为计算成功</p><div class="note warning simple"><p>如果计算失败请检查<code>POSCAR</code>中晶格基矢对应分量是否为0。如计算第三个方向偶极修正请保证前两个基矢的<code>z</code>分量为零且第三个基矢只有<code>z</code>分量不为零。</p></div><h3 id="静电势计算">静电势计算</h3><p>VASP 中可使用 <a href="https://www.vasp.at/wiki/index.php/LVHAR">LVHAR</a>参数进行功函数计算控制，输出文件中<code>LOCPOT</code>就是我们想要的静电势贡献，格式和<a href="https://www.vasp.at/wiki/index.php/CHGCAR">CHGCAR</a>一样，需计算Z方向的平均贡献</p><p>真空能级在打开<code>LVHAR</code>时可能去读取<code>OUTCAR</code>直接得到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep vacuum OUTCAR</span><br><span class="line"><span class="comment"># vacuum level on the upper side and lower side of the slab         2.807         3.188</span></span><br></pre></td></tr></table></figure><p>注意<code>OUTCAR</code>中的真空能级需进行费米能级修正，即减去<code>OUTCAR</code>中的<code>E-fremi</code></p><p><a href="https://ionizing.page/post/vasp-dipol-correction-work-function/">参考</a></p><h3 id="杂化泛函理论计算">杂化泛函理论计算</h3><blockquote><p>杂化泛函通过将不同的泛函通过一定系数相加得到更接近于实际值的估测<br>杂化泛函能够更好的描述电子自相互作用比较严重的体系，并且可以通过改变线性组合系数来调节HF交换泛函与DFT交换泛函的比例，使得计算结果更为精确，更加的接近实验的真实结果</p></blockquote><p>杂化泛函在<code>VASP</code>中的的种类有<code>HSE06</code>、<code>PBE0</code>、<code>B3LYP</code>，等不同类型，通过参数调整实现不同类型的杂化泛函计算</p><p>HSE06泛函交换关联公式为$$E_{XC}^{HES} = a E_x^{HF,SR}(\omega) + (1-a) E_x^{\omega PBE,SR}(\omega) + E_x^{\omega PBE,LR}(\mu) + E_c^{PBE}$$其中$E_x^{HF,SR}$为 HF 交换项<br>$E_x^{\omega PBE, SR}$为 HF 交换项<br>$E_x^{\omega PBE, LR}$为 PBE 的短程和长程交换项，<br>$E_x^{\omega PBE, SR}$$E_x^{HF,SR} $的系数和为1<br>$E_c^{PBE}$为 PBE 的库伦相关项</p><p>HSE06泛函： $a=0.25, \omega=0.2$<br>HSE03泛函： $a=0.25, \omega=0.3$<br>HSE0泛函： $a=0.25, \omega \to 0$<br>PBE泛函： $a=0, \omega \to \infty$</p><p><code>VASP</code>中通过<a href="https://www.vasp.at/wiki/index.php/LHFCALC#:~:text=Description%3A%20LHFCALC%20specifies%20whether%20Hartree-Fock%2FDFT%20hybrid%20functional%20type,VASP%20will%20default%20to%20the%20PBE0%20hybrid%20functional.">LHFCALC</a>参数控制是否使用杂化泛函计算，参数<a href="https://www.vasp.at/wiki/index.php/HFSCREEN">HFSCREEN</a>控制泛函种类，一般通过使用Damped算法加快计算</p><p><a href="https://www.vasp.at/wiki/index.php/List_of_hybrid_functionals">VASP</a>相关参数细节</p><p>HSE06</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">GGA = PE</span><br><span class="line">HFSCREEN = <span class="number">0.2</span></span><br><span class="line">ALGO = Damped; TIME = <span class="number">0.4</span></span><br></pre></td></tr></table></figure><p>with the default values AEXX=0.25, AGGAX=1-AEXX=0.75, AGGAC=1.0 and ALDAC=1.0, and using the PBE POTCAR files</p><p>HSE03</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">GGA = PE</span><br><span class="line">HFSCREEN = <span class="number">0.3</span></span><br><span class="line">ALGO=Damped; TIME = <span class="number">0.4</span></span><br></pre></td></tr></table></figure><p>with the default values AEXX=0.25, AGGAX=1-AEXX=0.75, AGGAC=1.0 and ALDAC=1.0, and using the PBE POTCAR files.</p><p>HSEsol</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">GGA = PS</span><br><span class="line">HFSCREEN = <span class="number">0.2</span></span><br></pre></td></tr></table></figure><p>with the default values AEXX=0.25, AGGAX=1-AEXX=0.75, AGGAC=1.0 and ALDAC=1.0, and using the PBE POTCAR files.</p><p>PBEh(PBE0)</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">GGA = PE</span><br><span class="line">ALGO=Damped</span><br><span class="line">TIME = <span class="number">0.4</span></span><br></pre></td></tr></table></figure><p>with the default values AEXX=0.25, AGGAX=1-AEXX=0.75, AGGAC=1.0 and ALDAC=1.0, and using the PBE POTCAR files.</p><p>B3LYP with VWN3(or VWN5) for LDA correlation</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">GGA = B3 (or B5)</span><br><span class="line">AEXX = <span class="number">0.2</span></span><br><span class="line">AGGAX = <span class="number">0.72</span></span><br><span class="line">AGGAC = <span class="number">0.81</span></span><br><span class="line">ALDAC = <span class="number">0.19</span></span><br><span class="line">ALGO = Damped</span><br><span class="line">TIME = <span class="number">0.4</span></span><br></pre></td></tr></table></figure><p>and using the PBE POTCAR files.</p><p>B3-WC(using Libxc, see the tag <a href="https://www.vasp.at/wiki/index.php/LIBXC1">LIBSC1</a>)</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">GGA = LIBXC</span><br><span class="line">LIBXC1 = <span class="number">412</span> (or HYB_GGA_XC_B1WC)</span><br><span class="line">AEXX = <span class="number">0.16</span></span><br></pre></td></tr></table></figure><p>and using the PBE POTCAR files.</p><p>Hartree-Fock</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LHFCALC = .TRUE.</span><br><span class="line">AEXX    = <span class="number">1.0</span></span><br><span class="line">ALDAC   = <span class="number">0.0</span></span><br><span class="line">AGGAC   = <span class="number">0.0</span></span><br></pre></td></tr></table></figure><p>with the default values AGGAX=1-AEXX=0.0, and using the PBE POTCAR files.</p><h4 id="计算步骤">计算步骤</h4><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TD;结构优化 --&gt; gamma-scf单点自洽;gamma-scf单点自洽 --&gt; pbe-band计算生成权重k点;pbe-band计算生成权重k点 --&gt; hse-scf杂化泛函自洽;hse-scf杂化泛函自洽 --&gt; HSE-band计算;  </pre></div><p>gamma-scf单点自洽KPOINTS样例(二维结构)</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Auto generation</span><br><span class="line"><span class="number">0</span></span><br><span class="line">G</span><br><span class="line"><span class="number">13</span> <span class="number">13</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span>  <span class="number">0</span>  <span class="number">0</span></span><br></pre></td></tr></table></figure><p>将pbe计算的能带OUTCAR得到k点的权重改成0接到自洽计算的<code>IBZKPT</code>后边，再将<code>IBZKPT</code>第二行的数改为总行数作为HSE-band计算的KPOINTS</p><p>用pbe自洽计算使用的KPOINTS文件和pbe自洽产生的CHG CHGCAR WAVECAR进行HSE自洽计算</p><p>将HSE自洽产生的CHG CHGAR WAVECAR和通修改IBZKPT得到的KPOINTS作为输入文件进行HSE-band计算</p><p><a href="https://zhuanlan.zhihu.com/p/362633162">参考1</a><br><a href="https://zhuanlan.zhihu.com/p/412484430">参考2</a><br><a href="https://blog.shishiruqi.com//2019/05/20/hse/">参考3</a><br><a href="https://vaspkit.com/tutorials.html#example-single-layer-mos2-1">参考4</a></p><h3 id="vdW修正">vdW修正</h3><blockquote><p>多数传统的交换相关泛函，诸如B3LYP，由于相关势的长程行为不对，完全不能描述色散作用。因此用于研究色散作用主导的问题结果差得一塌糊涂，比如物理吸附、长链烷烃之类的大分子构象、弱极性分子团簇等等。解决密度泛函对色散作用描述能力很差的最有效的方法就是引入经验的色散校正项<br>参数选择取决于具体计算体系</p></blockquote><p>VASP中通过<a href="https://www.vasp.at/wiki/index.php/IVDW">IVDW</a>参数控制vdw修正算法</p><table><thead><tr><th>参数</th><th>描述</th><th>可用版本</th></tr></thead><tbody><tr><td>IVDW=0</td><td>no dispersion correction</td><td>(default)</td></tr><tr><td>IVDW=1</td><td>10</td><td>DFT-D2 method of Grimme</td></tr><tr><td>IVDW=11</td><td>DFT-D3 method of Grimme with zero-damping function</td><td>(available as of VASP.5.3.4)</td></tr><tr><td>IVDW=12</td><td>DFT-D3 method with Becke-Johnson damping function</td><td>(available as of VASP.5.3.4)</td></tr><tr><td>IVDW=13</td><td>DFT-D4 method</td><td>(available as of VASP.6.2 as external package)</td></tr><tr><td>IVDW=2</td><td>20</td><td>Tkatchenko-Scheffler method</td></tr><tr><td>IVDW=21</td><td>Tkatchenko-Scheffler method with iterative Hirshfeld partitioning</td><td>(available as of VASP.5.3.5)</td></tr><tr><td>IVDW=202</td><td>Many-body dispersion energy method (MBD@rSC)</td><td>(available as of VASP.5.4.1)</td></tr><tr><td>IVDW=263</td><td>Many-body dispersion energy with fractionally ionic model for polarizability method (MBD@rSC/FI)</td><td>(available as of VASP.6.1.0)</td></tr><tr><td>IVDW=4</td><td>dDsC dispersion correction method</td><td>(available as of VASP.5.4.1)</td></tr></tbody></table><h3 id="计算SOC修正-自旋轨道耦合修正">计算SOC修正 自旋轨道耦合修正</h3><p>在计算不对称极化体系或外加电场体系时由于电场与体系中运动磁矩（可以认为是电子自旋磁矩）的耦合产生新的相互作用从而引入自旋轨道耦合效应修正</p><p>VASP中通过参数<a href="https://www.vasp.at/wiki/index.php/LSORBIT">LSORBIT</a>打开SOC修正，通过<a href="https://www.vasp.at/wiki/index.php/SAXIS">SAXIS</a>参数设置自旋方向，磁性计算中通过参数<a href="https://www.vasp.at/wiki/index.php/MAGMOM">MAGMOM</a>设置初始磁矩，如POSCAR中含有原子Ni C H O各有56 17 20 6个，可设置<code>MAGMOM = 56*1 17*0 20*0 6*0</code></p><p>两种设置方法</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LSORBIT = .TRUE.</span><br><span class="line">MAGMOM = x y z   # <span class="keyword">local</span> magnetic moment <span class="keyword">in</span> x,y,z</span><br><span class="line">SAXIS =  <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>   # quantisation axis parallel to z</span><br></pre></td></tr></table></figure><!----><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LSORBIT = .TRUE.</span><br><span class="line">MAGMOM = <span class="number">0</span> <span class="number">0</span> total_magnetic_moment   # <span class="keyword">local</span> magnetic moment parallel to SAXIS</span><br><span class="line">SAXIS =  x y z   # quantization axis parallel to vector (x,y,z)</span><br></pre></td></tr></table></figure><p>一般第二种更精确</p><p>这样设置通常会有对称性报错，可设置<code>ISYM = 0</code><br>使用<code>vasp_ncl</code>程序计算，记得在作业脚本中修改</p><h3 id="HSE06-SOC计算步骤">HSE06+SOC计算步骤</h3><p>A example in <a href="http://vaspkit.cn/index.php/248.html">vaspkit</a></p><ol><li>DFT+SOC band structure calculation</li></ol><p>Step-I: DFT SCF calculation with SOC (INCAR):</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System=XXX</span><br><span class="line">ISTART=<span class="number">0</span></span><br><span class="line">ICHARG=<span class="number">2</span></span><br><span class="line">ENCUT=<span class="number">400</span></span><br><span class="line">EDIFF=<span class="number">1E-6</span></span><br><span class="line">NELM=<span class="number">300</span></span><br><span class="line">ISMEAR=-<span class="number">5</span></span><br><span class="line">#SIGMA=<span class="number">0.05</span></span><br><span class="line">IALGO=<span class="number">38</span></span><br><span class="line">#LREAL=Auto</span><br><span class="line"></span><br><span class="line">#SOC-related:</span><br><span class="line">LSORBIT=.TRUE.</span><br><span class="line">SAXIS= <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">ISYM=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>Step-II: DFT band calculation with SOC (INCAR):</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">System=XXX</span><br><span class="line">ISTART=<span class="number">0</span></span><br><span class="line">ICHARG=<span class="number">11</span></span><br><span class="line">ENCUT=<span class="number">400</span></span><br><span class="line">EDIFF=<span class="number">1E-6</span></span><br><span class="line">NELM=<span class="number">300</span></span><br><span class="line">ISMEAR=<span class="number">0</span></span><br><span class="line">SIGMA=<span class="number">0.05</span></span><br><span class="line">IALGO=<span class="number">38</span></span><br><span class="line">LREAL=.FALSE.</span><br><span class="line"></span><br><span class="line">#SOC-related:</span><br><span class="line">LSORBIT=.TRUE.</span><br><span class="line">SAXIS= <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">ISYM=<span class="number">0</span></span><br></pre></td></tr></table></figure><ol start="2"><li>HSE06+SOC band structure calculation</li></ol><p>Step-I: HSE06 SCF calculation with SOC (INCAR):</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">System=XXX</span><br><span class="line">#ISTART=<span class="number">0</span></span><br><span class="line">#ICHARG=<span class="number">2</span></span><br><span class="line">ENCUT=<span class="number">400</span></span><br><span class="line">EDIFF=<span class="number">1E-6</span></span><br><span class="line">NELM=<span class="number">120</span></span><br><span class="line">ISMEAR=<span class="number">0</span></span><br><span class="line">SIGMA=<span class="number">0.05</span></span><br><span class="line">#IALGO=<span class="number">38</span></span><br><span class="line">#LREAL=.FALSE.</span><br><span class="line"></span><br><span class="line">#SOC-related:</span><br><span class="line">LSORBIT=.TRUE.</span><br><span class="line">SAXIS= <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">ISYM=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">#HSE06-related:</span><br><span class="line">LHFCALC = .TRUE.</span><br><span class="line">HFSCREEN = <span class="number">0.2</span></span><br><span class="line">ALGO = Damped         #Damped/Normal/<span class="built_in">All</span></span><br><span class="line">TIME = <span class="number">0.4</span></span><br></pre></td></tr></table></figure><p>Step-II: HSE06 NSCF calculation with SOC:</p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">System=XXX</span><br><span class="line">#ISTART=<span class="number">0</span></span><br><span class="line">#ICHARG=<span class="number">2</span></span><br><span class="line">ENCUT=<span class="number">400</span></span><br><span class="line">EDIFF=<span class="number">1E-6</span></span><br><span class="line">NELM=<span class="number">300</span></span><br><span class="line">ISMEAR=<span class="number">0</span></span><br><span class="line">SIGMA=<span class="number">0.05</span></span><br><span class="line">#IALGO=<span class="number">38</span></span><br><span class="line">#LREAL=.FALSE.</span><br><span class="line"></span><br><span class="line">#SOC-related:</span><br><span class="line">LSORBIT=.TRUE.</span><br><span class="line">SAXIS= <span class="number">0</span> <span class="number">0</span> <span class="number">1</span></span><br><span class="line">ISYM=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">#HSE06 related:</span><br><span class="line">LHFCALC = .TRUE.</span><br><span class="line">HFSCREEN = <span class="number">0.2</span></span><br><span class="line">ALGO = Normal                  #<span class="keyword">use</span> Normal</span><br><span class="line">TIME = <span class="number">0.4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> vasp计算 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vasp </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
